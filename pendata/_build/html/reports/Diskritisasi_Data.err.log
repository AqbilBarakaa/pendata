Traceback (most recent call last):
  File "C:\Users\acer\AppData\Local\Programs\Python\Python39\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\acer\AppData\Local\Programs\Python\Python39\lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\acer\AppData\Roaming\Python\Python39\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\acer\AppData\Local\Programs\Python\Python39\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\acer\AppData\Local\Programs\Python\Python39\lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\acer\AppData\Local\Programs\Python\Python39\lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\acer\AppData\Local\Programs\Python\Python39\lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Normalisasi
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
print("\nNormalisasi data Sepal Length")
print(X_scaled)
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mValueError[0m                                Traceback (most recent call last)
Cell [1;32mIn[4], line 3[0m
[0;32m      1[0m [38;5;66;03m# Normalisasi[39;00m
[0;32m      2[0m scaler [38;5;241m=[39m StandardScaler()
[1;32m----> 3[0m X_scaled [38;5;241m=[39m [43mscaler[49m[38;5;241;43m.[39;49m[43mfit_transform[49m[43m([49m[43mX[49m[43m)[49m
[0;32m      4[0m [38;5;28mprint[39m([38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124mNormalisasi data Sepal Length[39m[38;5;124m"[39m)
[0;32m      5[0m [38;5;28mprint[39m(X_scaled)

File [1;32m~\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py:319[0m, in [0;36m_wrap_method_output.<locals>.wrapped[1;34m(self, X, *args, **kwargs)[0m
[0;32m    317[0m [38;5;129m@wraps[39m(f)
[0;32m    318[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21mwrapped[39m([38;5;28mself[39m, X, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m--> 319[0m     data_to_wrap [38;5;241m=[39m f([38;5;28mself[39m, X, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m    320[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(data_to_wrap, [38;5;28mtuple[39m):
[0;32m    321[0m         [38;5;66;03m# only wrap the first output for cross decomposition[39;00m
[0;32m    322[0m         return_tuple [38;5;241m=[39m (
[0;32m    323[0m             _wrap_data_with_container(method, data_to_wrap[[38;5;241m0[39m], X, [38;5;28mself[39m),
[0;32m    324[0m             [38;5;241m*[39mdata_to_wrap[[38;5;241m1[39m:],
[0;32m    325[0m         )

File [1;32m~\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\base.py:918[0m, in [0;36mTransformerMixin.fit_transform[1;34m(self, X, y, **fit_params)[0m
[0;32m    903[0m         warnings[38;5;241m.[39mwarn(
[0;32m    904[0m             (
[0;32m    905[0m                 [38;5;124mf[39m[38;5;124m"[39m[38;5;124mThis object ([39m[38;5;132;01m{[39;00m[38;5;28mself[39m[38;5;241m.[39m[38;5;18m__class__[39m[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m) has a `transform`[39m[38;5;124m"[39m
[1;32m   (...)[0m
[0;32m    913[0m             [38;5;167;01mUserWarning[39;00m,
[0;32m    914[0m         )
[0;32m    916[0m [38;5;28;01mif[39;00m y [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m    917[0m     [38;5;66;03m# fit method of arity 1 (unsupervised transformation)[39;00m
[1;32m--> 918[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mfit(X, [38;5;241m*[39m[38;5;241m*[39mfit_params)[38;5;241m.[39mtransform(X)
[0;32m    919[0m [38;5;28;01melse[39;00m:
[0;32m    920[0m     [38;5;66;03m# fit method of arity 2 (supervised transformation)[39;00m
[0;32m    921[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mfit(X, y, [38;5;241m*[39m[38;5;241m*[39mfit_params)[38;5;241m.[39mtransform(X)

File [1;32m~\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\preprocessing\_data.py:894[0m, in [0;36mStandardScaler.fit[1;34m(self, X, y, sample_weight)[0m
[0;32m    892[0m [38;5;66;03m# Reset internal state before fitting[39;00m
[0;32m    893[0m [38;5;28mself[39m[38;5;241m.[39m_reset()
[1;32m--> 894[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mpartial_fit[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[43msample_weight[49m[43m)[49m

File [1;32m~\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\base.py:1389[0m, in [0;36m_fit_context.<locals>.decorator.<locals>.wrapper[1;34m(estimator, *args, **kwargs)[0m
[0;32m   1382[0m     estimator[38;5;241m.[39m_validate_params()
[0;32m   1384[0m [38;5;28;01mwith[39;00m config_context(
[0;32m   1385[0m     skip_parameter_validation[38;5;241m=[39m(
[0;32m   1386[0m         prefer_skip_nested_validation [38;5;129;01mor[39;00m global_skip_validation
[0;32m   1387[0m     )
[0;32m   1388[0m ):
[1;32m-> 1389[0m     [38;5;28;01mreturn[39;00m fit_method(estimator, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [1;32m~\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\preprocessing\_data.py:930[0m, in [0;36mStandardScaler.partial_fit[1;34m(self, X, y, sample_weight)[0m
[0;32m    898[0m [38;5;250m[39m[38;5;124;03m"""Online computation of mean and std on X for later scaling.[39;00m
[0;32m    899[0m 
[0;32m    900[0m [38;5;124;03mAll of X is processed as a single batch. This is intended for cases[39;00m
[1;32m   (...)[0m
[0;32m    927[0m [38;5;124;03m    Fitted scaler.[39;00m
[0;32m    928[0m [38;5;124;03m"""[39;00m
[0;32m    929[0m first_call [38;5;241m=[39m [38;5;129;01mnot[39;00m [38;5;28mhasattr[39m([38;5;28mself[39m, [38;5;124m"[39m[38;5;124mn_samples_seen_[39m[38;5;124m"[39m)
[1;32m--> 930[0m X [38;5;241m=[39m [43mvalidate_data[49m[43m([49m
[0;32m    931[0m [43m    [49m[38;5;28;43mself[39;49m[43m,[49m
[0;32m    932[0m [43m    [49m[43mX[49m[43m,[49m
[0;32m    933[0m [43m    [49m[43maccept_sparse[49m[38;5;241;43m=[39;49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mcsr[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mcsc[39;49m[38;5;124;43m"[39;49m[43m)[49m[43m,[49m
[0;32m    934[0m [43m    [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mFLOAT_DTYPES[49m[43m,[49m
[0;32m    935[0m [43m    [49m[43mensure_all_finite[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mallow-nan[39;49m[38;5;124;43m"[39;49m[43m,[49m
[0;32m    936[0m [43m    [49m[43mreset[49m[38;5;241;43m=[39;49m[43mfirst_call[49m[43m,[49m
[0;32m    937[0m [43m[49m[43m)[49m
[0;32m    938[0m n_features [38;5;241m=[39m X[38;5;241m.[39mshape[[38;5;241m1[39m]
[0;32m    940[0m [38;5;28;01mif[39;00m sample_weight [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [1;32m~\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py:2944[0m, in [0;36mvalidate_data[1;34m(_estimator, X, y, reset, validate_separately, skip_check_array, **check_params)[0m
[0;32m   2942[0m         out [38;5;241m=[39m X, y
[0;32m   2943[0m [38;5;28;01melif[39;00m [38;5;129;01mnot[39;00m no_val_X [38;5;129;01mand[39;00m no_val_y:
[1;32m-> 2944[0m     out [38;5;241m=[39m check_array(X, input_name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mX[39m[38;5;124m"[39m, [38;5;241m*[39m[38;5;241m*[39mcheck_params)
[0;32m   2945[0m [38;5;28;01melif[39;00m no_val_X [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m no_val_y:
[0;32m   2946[0m     out [38;5;241m=[39m _check_y(y, [38;5;241m*[39m[38;5;241m*[39mcheck_params)

File [1;32m~\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py:1055[0m, in [0;36mcheck_array[1;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_writeable, force_all_finite, ensure_all_finite, ensure_non_negative, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator, input_name)[0m
[0;32m   1053[0m         array [38;5;241m=[39m xp[38;5;241m.[39mastype(array, dtype, copy[38;5;241m=[39m[38;5;28;01mFalse[39;00m)
[0;32m   1054[0m     [38;5;28;01melse[39;00m:
[1;32m-> 1055[0m         array [38;5;241m=[39m [43m_asarray_with_order[49m[43m([49m[43marray[49m[43m,[49m[43m [49m[43morder[49m[38;5;241;43m=[39;49m[43morder[49m[43m,[49m[43m [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m,[49m[43m [49m[43mxp[49m[38;5;241;43m=[39;49m[43mxp[49m[43m)[49m
[0;32m   1056[0m [38;5;28;01mexcept[39;00m ComplexWarning [38;5;28;01mas[39;00m complex_warning:
[0;32m   1057[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[0;32m   1058[0m         [38;5;124m"[39m[38;5;124mComplex data not supported[39m[38;5;130;01m\n[39;00m[38;5;132;01m{}[39;00m[38;5;130;01m\n[39;00m[38;5;124m"[39m[38;5;241m.[39mformat(array)
[0;32m   1059[0m     ) [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mcomplex_warning[39;00m

File [1;32m~\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_array_api.py:839[0m, in [0;36m_asarray_with_order[1;34m(array, dtype, order, copy, xp, device)[0m
[0;32m    837[0m     array [38;5;241m=[39m numpy[38;5;241m.[39marray(array, order[38;5;241m=[39morder, dtype[38;5;241m=[39mdtype)
[0;32m    838[0m [38;5;28;01melse[39;00m:
[1;32m--> 839[0m     array [38;5;241m=[39m [43mnumpy[49m[38;5;241;43m.[39;49m[43masarray[49m[43m([49m[43marray[49m[43m,[49m[43m [49m[43morder[49m[38;5;241;43m=[39;49m[43morder[49m[43m,[49m[43m [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m)[49m
[0;32m    841[0m [38;5;66;03m# At this point array is a NumPy ndarray. We convert it to an array[39;00m
[0;32m    842[0m [38;5;66;03m# container that is consistent with the input's namespace.[39;00m
[0;32m    843[0m [38;5;28;01mreturn[39;00m xp[38;5;241m.[39masarray(array)

[1;31mValueError[0m: could not convert string to float: 'C'

